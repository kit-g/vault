name: "Deploy"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.23
      - name: Install dependencies
        working-directory: api
        run: go mod download
      - name: Run model tests
        working-directory: api/internal/models
        run: go test . -v

  api-deploy:
    name: Deploy Vault API
    runs-on: ubuntu-latest
    needs: api-tests
    if: success()
    env:
      AWS_REGION: "ca-central-1"
      AWS_ROLE: "arn:aws:iam::583168578067:role/GitHubActionsDeployRole"
      FUNCTION_NAME: "vault-api"
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build Lambda Binary
        run: ARTIFACTS_DIR=. make build-VaultApiFunction
        working-directory: api

      - name: Zip Lambda Binary
        run: zip function.zip bootstrap
        working-directory: api

      - name: Update Lambda Function Code
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.FUNCTION_NAME }} \
            --zip-file fileb://api/function.zip \
            --region ${{ env.AWS_REGION }} > /dev/null

  web-deploy:
    name: Deploy Web App
    runs-on: ubuntu-latest
    needs: api-deploy
    if: success()
    env:
      AWS_REGION: "ca-central-1"
      AWS_ROLE: "arn:aws:iam::583168578067:role/GitHubActionsDeployRole"
      DISTRIBUTION_ID: "E2EKJGBU83AOIP"
      HOSTING_BUCKET: "583168578067-vault-web"
      WORKING_DIRECTORY: "./web"
      VITE_API_URL: "https://dev.api.vault.awry.me"
      VITE_DOMAIN: "vault.awry.me"

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '${{ env.WORKING_DIRECTORY }}/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Build React application
        run: npm run build
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          VITE_API_URL: ${{ env.VITE_API_URL }}

      - name: Create Version File
        run: |
          echo "{\"commit\":\"${{ github.sha }}\",\"deployedAt\":\"$(date -u --iso-8601=seconds)\"}" > ${{ env.WORKING_DIRECTORY }}/dist/version.json

      - name: Deploy to S3
        run: |
          aws s3 sync ${{ env.WORKING_DIRECTORY }}/dist s3://${{ env.HOSTING_BUCKET }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION_ID }} --paths "/*"
